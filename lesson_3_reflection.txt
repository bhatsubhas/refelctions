When would you want to use a remote repository rather than keeping all your work local?
If more than one person is working on a repository then it is beeter to use remote repository.
It also works as a backup incase of system crash or accidental delete.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are used when you don't have permission to make changes to the repository. It is GitHub specific option
to create your own copy for modification without touching the original repository.
Clones are used to make your own copy of the repository on the local machine and push changes to the main repository.
Branches are used to create a new feature or experimental changes without touching the master branch. Changes done on the 
branches can be merged with master using git merge command.

What is the benifits of having copy of the last known state of the remote stored locally?
This makes sure that you have remote changes in your local machine before you go offline and don't have
access to the remote. And local changes can be merged with remote changes without internet connection.

How would you collaborate without using Git or Github? What would be easier, and what would be harder?
Files will be edited independently and then shared via e-mail, all the conflicts will be resolved manually.
It will become harder to collaborate as number of contributors increase and number of files to collaborate increases. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When changes are like adding major feature or an experimental feature which affects others who are also working on same set of files
then it is better to branch-out and work independently. This will reduce time spent on resolving conflicts each time when files are committed.
When you are working on files which you are sure that no one else will be working then it is better to work directly on master branch. This will 
reduce unnecessary merging of code at later point of time.
